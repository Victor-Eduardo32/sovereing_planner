generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  sessions Session[]
  taskLists TaskList[]
  completedTaskList CompletedTaskList[]
  Balance Balance[]

  @@map("users")
}

model Session {
  id Int @id @default(autoincrement())
  user_id String 
  user User @relation(fields: [user_id], references: [id])
  token String
  created_at DateTime @default(now())
  ended_at DateTime?

  @@map("sessions")
  @@index([user_id])
}

model TaskList {
  id Int @id @default(autoincrement())
  user_id String 
  user User @relation(fields: [user_id], references: [id])
  title String
  description String
  priority_level Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  tasks Task[]
  
  @@map("task_lists")
  @@index([user_id])
}

model Task {
  id Int @id @default(autoincrement())
  task_list_id Int
  task_list TaskList @relation(fields: [task_list_id], references: [id], onDelete: Cascade)
  name String
  state Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  
  @@map("tasks")
  @@index([task_list_id])
}

model CompletedTaskList {
  id Int @id @default(autoincrement())
  user_id String
  user User @relation(fields: [user_id], references: [id])
  title String
  description String
  ended_at DateTime @default(now())
  CompletedTask CompletedTask[]

  @@map("completed_task_lists")
  @@index([user_id])
}

model CompletedTask {
  id Int @id @default(autoincrement())
  completed_task_list_id Int
  completed_task_list CompletedTaskList @relation(fields: [completed_task_list_id], references: [id])
  name String
  
  @@map("completed_tasks")
  @@index([completed_task_list_id])
}

enum Currency {
  BRL
  USD
  EUR
}

model Balance {
  id Int @id @default(autoincrement())
  user_id String
  user User @relation(fields: [user_id], references: [id])
  name String
  amount BigInt
  currency Currency
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  saving Saving[]

  @@map("balances")
}

model Saving {
  id Int @id @default(autoincrement())
  balance_id Int
  balance Balance @relation(fields: [balance_id], references: [id], onDelete: Cascade)
  description String
  value BigInt
  date DateTime
  created_at DateTime @default(now())

  @@map("savings")
}